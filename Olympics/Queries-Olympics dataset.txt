/
 * Queries for the Olympics Database */ 

/* A. A query that uses an aggregate function in the SELECT, a GROUP BY and a HAVING: 
 * Determine the names and number of categories athletes participated in of all athletes having participated in at least 3 categories at Olympic Games. 
 */

select "name", count(category)								-- The name and the number of categories are selected by using the aggregrate function 'count'. 
from participates_in 										-- The athlete ID and Event_ID are presented in the Participates_in table. To find the name of the athlete,
		inner join 											-- this table is joined with the athlete table. To find the categories, the participates_in table is also joined with the sport_event table. 
	sport_event 
		on participates_in.event_id = sport_event.event_id 
		inner join
	athlete 
		on participates_in.athlete_id = athlete.id
group by name												-- We are grouping by name
having count(category) >= 3;								-- The aggregrate function count present in the having clause to impose the constraint of having participated in at least 3 categories. 

-- It is also possible to make use of Event_ID, as each event_id already represents a unique category and a olympic game. Therefore, an athlete should participate in at least 3 events. 

select "name", count(event_id)							 
from participates_in 									
		inner join 										 
	athlete 
		on participates_in.athlete_id = athlete.id
group by name
having count(event_id) >= 3;		

/* B. A query that makes use of NOT IN in a WHERE or HAVING clause.
* Determine the names of the countries where their athletes won medals (gold,silver,bronze). 
*/

select distinct country
from country 
where country_id not in ( 						-- country IDs are not chosen where the results is 'NA' (no medal)
						select country_id 		-- by joining the athlete table and the participates_in table, country_ids are selected from athletes with a medal. 
						from athlete inner join participates_in on athlete.id = participates_in.athlete_id
						where "result" = 'NULL' 	-- no medal won by the athlete
						)
and country_id in (select country_id 			-- athlete presenting his/her country
					from athlete);

/* C. A query that contains a window function.
*  For each Finnish athlete, retrieve his/her name and results and the total number of Finnish athletes with the same results. 
*/
select name, "result", count(*) over(partition by "result") 						-- Be aware that a name can appear twice as an athlete may have participated in two Olympic Games
from athlete inner join participates_in on athlete.id = participates_in.athlete_id
where country_id in (select country_id 												-- Country names are in the Country Table
					from country													-- Therefore, only select the country_id of the Netherlands
					where country = 'Finland')

/* D.list names of countries which paticpated in olympics but never host the olympics yet?
*solution: this query result the names of countries from country table which never host the olympics.
*/

select distinct country                                         -- each country name chosen 
from country                                                    -- from country table
where country_id not in(select country_id from olympic_games);  -- by comparing country id from country table to olympic_games table,
                                                                -- country id which is not available in olympic games are the countries which never hosted olympics.


/* query using agg function and select, grouby, having.
* list the name of countries and the times they represented by thier athletes, 5times or more?
*/

select country, count(athlete_id) as no_of_times_participated 
from participates_in 
join athlete on participates_in.athlete_id = athlete.id  -- providing link of athlete id attribute between two table, particpate_in and athlete. to see which athlete particpated in event as each athlete represnt a country
join country on athlete.country_id = country.country_id  -- providing link of country id attribute between two table, country and athlete. to see which athlete represent which country.
group by country										 -- grouping it by country
having count(athlete_id) >= 5;                           -- counting the number of athletes particpates more than or equal to 5 times.


/*window function
* for each athlete, determine their country, age and number of athlete with similar age.
*/

select "name", country, age, count(age) over(partition by age order by age) as no_of_athlete_with_similar_age  -- selecting attribute, and partitioning the table by age.
from athlete
join country on country.country_id = athlete.country_id                                                        -- joining the table to get the country name from country id.
